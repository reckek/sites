@mixin container($braeckpoint, $conent...) {
  // ╔═════════════════════════════════════════════════════╗
  // ║                 Использование                       ║
  // ╠═════════════════════════════════════════════════════╣
  // ║ @include container(BrackePoint) using ($type) {...} ║
  // ╚═════════════════════════════════════════════════════╝

  $value: check-braeckpoint($braeckpoint);

  @if $is-mobile-first == true {
    @if $braeckpoint != sm {
      @media (min-width: $value) {
        @content ($conent);
      }
    }

    @if $braeckpoint == sm {
      @media (max-width: $value) {
        @content ($conent);
      }
    }
  }

  // (Now usege)
  // @if $is-mobile-first == false {
  //   @if $braeckpoint != sm {
  //     @media (max-width: $value) {
  //       @content ($conent);
  //     }
  //   }
  //   @if $braeckpoint == sm {
  //     @media (min-width: $value) {
  //       @content ($conent);
  //     }
  //   }
  // }
}

@mixin font($font_name, $file_name, $weight, $style) {
  @font-face {
    src: url("../assets/fonts/#{$file_name}.woff") format("woff"), url("../fonts/#{$file_name}.woff2") format("woff2");
    font-family: $font_name;
    font-weight: #{$weight};
    font-style: #{$style};
    font-display: swap;
  }
}
